package routines;

/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class ParseFTTrail {

	

	public static String parseFTTrail(String txtstr,String source )
	{
		try{


			String subTxtstr=null;
			String ftType=null;
			if(txtstr.contains("*")){		
				String[] firstString=txtstr.split("\\*" );
				if(firstString[1].contains("nct"))
					ftType="seo";
				subTxtstr=firstString[1];
			}
			else
				subTxtstr=txtstr;

			if(ftType==null)
			{
				if(subTxtstr.contains("&"))
				{
					String[] secondString=subTxtstr.split("&");

					for(int i=0;i<secondString.length;i++){
						if(secondString[i].contains(source))
						{
							if(source.equalsIgnoreCase("kwd")){
								return secondString[i].substring(secondString[i].indexOf("=")+1,secondString[i].length()).replaceAll("%20"," ");
							}
							
							return secondString[i].substring(secondString[i].indexOf("=")+1,secondString[i].length());
						}
					}
				}

				else if(subTxtstr.contains(source) &&subTxtstr.contains("="))
					return subTxtstr.substring(subTxtstr.indexOf("=")+1,subTxtstr.length());

			}

			else
			{
				if(subTxtstr!=null && subTxtstr.split("|").length >3 && source.equals("kwd")){

					System.out.println("inside nct: "+subTxtstr);
					String[] arr2=subTxtstr.split("\\|");
					if(arr2[3].contains("%20"))
						 arr2[3]=   arr2[3].replaceAll("%20"," "); 
					return arr2[3];
				}
				if(subTxtstr!=null && subTxtstr.split("|").length >3 && source.equals("source")){

					//System.out.println("inside nct: "+subTxtstr);
					String[] arr2=subTxtstr.split("\\|");
				
					return arr2[2];
				}
			}

			return null;
		}catch(Exception e){
			return null;
		}	
	}


}
